<!-- DO NOT EDIT THIS FILE. ANY CHANGES WILL BE OVERWRITTEN -->

<script type="text/javascript" src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>

<!-- Need updated version of jQuery for validate library -->
<script>var $j = $.noConflict(true);</script>

<style type="text/css">
    #pickup-store-search {
        background-position: 10px 12px;
        /* Position the search icon */
        background-repeat: no-repeat;
        /* Do not repeat the icon image */
        font-size: 16px;
        /* Increase font-size */
        padding: 12px 20px 12px 12px;
        /* Add some padding */
        border: 1px solid #ddd;
        /* Add a grey border */
        margin-bottom: 12px;
        /* Add some space below the input */
    }

    #storeUL {
        list-style-type: none;
        padding: 0;
        margin: 0;
        overflow: auto;
    }

    #storeUL li {
        margin-bottom: 5px;
    }

    #storeUL li a {
        padding: 12px;
        /* Add some padding */
        text-decoration: none;
        /* Remove default text underline */
        display: block;
        /* Make it into a block element to fill the whole list */
    }

    #storeUL li a.header {
        background-color: #e2e2e2;
        /*Darker background for headers */
        cursor: default;
        /* Change cursor style */
    }

    #storeUL li a:hover:not(.header) {
        background-color: #eee;
        /* Add a hover effect to all links, except for headers */
    }

    .activeStore {
        background: #cccccc;
        /* Background for currently selected store */
    }

    #pickup-header {
        font-size: 0.95em;
        text-decoration: none;
        display: inline;
    }

    #pickup-box {
        vertical-align: middle;
    }

    .pickup-hidden {
        display: none!important;
    }

    .clearfix::after {
        content: "";
        clear: both;
        display: table;
    }

    #pickup-details input{
        width:100%;
    }
</style>

<div id="pickup-container" style="display:none;">

  <h6 id="pickup-header">Pick up In Store</h6> <input id="pickup-box" onChange="pickupBoxChange()" type="checkbox" name="pickup" value="pickup">


  <!-- Name of person picking up etc -->
  <div id="pickup-details" style="display:none;">

      <label id="pickup-date-label" for="pickup-date">Pickup Date</label><span class="pickup-date-label-span"><br></span>
      <input type="date" id="pickup-date-start" name="pickup-date-start">
      <label id="pickup-date-start-error" class="valid" for="pickup-date-start" style="display: none;"></label>
    <br>
      <label id="pickup-name-label"for="pickup-date-start">Name of Person Collecting</label><br>
      <input style="margin-bottom: 0px;" type="text" id="pickup-name" name="pickup-name" placeholder="Your name">
    <br>

      <label id="pickup-number-label" for="pickup-number">Contact Number</label>
      <br>
      <input type="text" id="pickup-number" name="pickup-number" placeholder="" />

      <br>

      <div id="store-search">

          <label for="pickup-store-search">Pickup Store</label>
          <input type="text" name="pickup-store-search" id="pickup-store-search" onkeyup="storeFilter()" placeholder="Search for store">
          <input type="hidden" name="pickup-store" id="pickup-store">
          <!-- Where store value gets saved for validation -->

          <ul id="storeUL">
              <!--           TODO: add headers based on names -->
              <!--           <li><a href="#" class="header"></a></li>	 -->
          </ul>
      </div>
  </div>

  <div style="display:none;">
      {% for p in cart.items%} {% for c in p.product.collections %}
      <span class="product-collection">{{ c.title }}</span> {% endfor %} {% endfor %}
  </div>
</div>

<script type="text/javascript">

    var pickupProductID = "1552769548296"; // Variant ID of pickup in store product
    var myForm = $j('form')[n];

    var collections = [];
    var settings = "";
    var stores = "";

    // If settings aren't blank, load. Else set to default settings
    if ('' != "") {
        settings = JSON.parse('');

        for (var c in settings.mandatory_collections) {
            collections.push(settings.mandatory_collections[c].title);
        }

    } else {
        settings = { // Default settings
            'max_days': 0,
            'min_days' : 1,  // 0 = Same day pickup, 1 = tomorrow etc
            'name': true,
            'phone': true,
            'mandatory_collections': [],
            'date_enabled' : true
        };
    };

    // Make sure each property is in settings (for users who have updated cart script but not updated settings)
    if (!'min_days' in settings) {
      settings['min_days'] = 1;
    };

    if (!'date_enabled' in settings) {
      settings['date_enabled'] = true;
    };


    // If multiple stores
    if ('' != "") {
        stores = JSON.parse('');
    };

    // Make sure at least one setting is set. If no settings, hide the pickup box
    if (settings.date_enabled || settings.phone || settings.name || stores.length > 1) {
      $j('#pickup-container').css('display', 'block');
    } else {
      $j('#pickup-container').css('display', 'none');
    };


    var pickupCompany = '';
    var pickupAddress = '';
    var pickupCity = '';
    var pickupCountry = '';
    var pickupZip = '';
    var pickupProvince = '';
    var pickupLocale = '';

    // Pickup mandatory if any products in cart have this collection. eg Projectiles
    var product_collections = []; // All collections from all products in cart

    var startDate = document.getElementsByName('pickup-date-start'); // Start date for pickup
    //var endDate = document.getElementsByName('pickup-date-end'); //  End date for pickup

    var phone = $j('#pickup-number');
    var name = $j('#pickup-name');
    var pickupStore = ""; // Name of store where customer is picking up

    if (settings.customCSS) {
      var link = document.createElement('link')
      link.setAttribute('rel', 'stylesheet')
      link.setAttribute('type', 'text/css')
      link.setAttribute('href', '{{ "store-pickup.css" | asset_url }}' )
      document.getElementsByTagName('head')[0].appendChild(link)
    };

    var shippingInfo = "?step=contact_information&checkout[shipping_address][company]=" + pickupCompany + "&checkout[shipping_address][phone]=" + phone.val() + "&checkout[shipping_address][address1]=" + pickupAddress +
        "&checkout[shipping_address][city]=" + pickupCity + "&checkout[shipping_address][country]=" + pickupCountry + "&checkout[shipping_address][zip]=" + pickupZip + "&checkout[shipping_address][province]=" + pickupProvince + "&locale=" +
        pickupLocale;

    var getCartItems = function(callback) {
        // Get items currently in the cart
        $j.ajax({
            url: '/cart.js',
            type: 'GET',
            dataType: 'json',
            success: function(response) {
                if (callback !== null) {
                    callback(response)
                }
            },
            error: function(e) {
                console.log('Error!', e);
            }
        });
    };



    var pickupBoxChange = function() {
        // For when pickup checkbox is changed.
        if (!$j.validator) return;
        if ($j('#pickup-box').is(':checked') ) { // If user has selected to pickup or cart contains pickup product
            $j('#pickup-details').show();

            // Hide/show date
            if (settings.date_enabled) {
              // If enabled, add validation rules
              $j("#pickup-date-start").rules('add', {
                  "required": true,
                  "messages": {
                      "required": "Please enter a pickup date."
                  }
              });
            } else {
                // If not enabled, hide
                $j('#pickup-date-start').css('display', 'none');
                $j('#pickup-date-label').css('display', 'none');
                $j('.pickup-date-label-span').css('display', 'none');
            };

            // Hide/show phone
            if (settings.phone) {
                $j("#pickup-number").rules('add', {
                    "required": true,
                    "messages": {
                        "required": "Please enter a phone number."
                    }
                });
            } else {
                // $j("#pickup-number").rules('remove');
                $j('#pickup-number').css('display', 'none');
                $j('#pickup-number-label').css('display', 'none');
            }

            // Hide/show name
            if (settings.name) {
                $j('#pickup-name').rules('add', {
                    required: true,
                    messages: {
                        required: "Please enter who will be picking up your order."
                    }
                });
            } else {
                $j('#pickup-name').css('display', 'none');
                $j('#pickup-name-label').css('display', 'none');
            };

            // Hide/show store search
            if (stores.length > 1) {
                // var rules = ($j('#pickup-store').rules());
                // console.log(rules);
                $j('#pickup-store').rules('add', {
                    "required": true,
                    "messages": {
                        "required": "Please select which store you will pick up from"
                    }
                });
            } else {
                $j('#store-search').css('display', 'none'); // Hide store search
            }

            $j('#pickup-details').css('display', 'inline !important'); // Show extra info
        } else {
            $j("#pickup-date-start").rules('remove');
            $j("#pickup-number").rules('remove');
            $j('#pickup-name').rules('remove');
            $j('#pickup-store').rules('remove');

            // Pickup not checked. Hide display.
            $j('#pickup-details').css('display', 'none'); // Hide extra info

            getCartItems(function(response){
              // Check each item in cart to see if Pickup product currently in the cart
              for (var item in response.items) {
                  if (response.items[item].variant_id == pickupProductID) {
                      changeCartItems(pickupProductID, 0, function(res) {
                          location.reload();
                      });
                  };
              };
            })




        };
    };

    var storeFilter = function() {
        // Filters stores by search
        // Declare variables
        var input, filter, ul, li, a, i;
        input = document.getElementById('pickup-store-search');
        filter = input.value.toUpperCase();
        ul = document.getElementById("storeUL");
        li = ul.getElementsByTagName('li');

        // Loop through all list items, and hide those who don't match the search query
        for (i = 0; i < li.length; i++) {
            a = li[i].getElementsByTagName("a")[0];
            if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
                li[i].style.display = "";
            } else {
                li[i].style.display = "none";
            }
        }
    };


    var addCartItems = function(variantId, callback) {
        // Product data for pickup product

        getCartItems(function(response) {
            var inCart = false; // Assume not currently in cart

            // Check each item in cart to see if Pickup product currently in the cart
            for (var item in response.items) {
                if (response.items[item].variant_id == variantId) {
                    inCart = true;
                };
            };

            // Not in cart, add pickup product to cart
            if (inCart === false) {
                var productData = {
                    quantity: 1,
                    id: variantId
                };

                $j.ajax({
                    type: "POST",
                    url: "/cart/add.js",
                    data: productData,
                    success: function() {
                        callback();
                    },
                    error: function(err) {
                        console.log(err);
                    },
                    dataType: "json"
                });
            } else {
                callback();
            }

        });
    };

    var changeCartItems = function(variantId, productQty, callback) {
        // Changes quantity of item in cart to 0.
        var productData = {
            quantity: productQty,
            id: variantId
        };
        $j.post('/cart/change.js', productData, function(res, err) {
            if (err != "success") {
                console.log(err);
            } else {
                callback(res);
            }
        }, 'json');
    };

    var setOrderNotes = function() {
        // Returns existing cart notes + pickup details. Then submits form
        var name = $j('#pickup-name');
        var phoneNumber = $j('#pickup-number');
        var pickupDate = $j('#pickup-date-start');
        var notesText = $j('textarea[name="note"]').val();
        var pickUpInformation = "Pickup Information:";

        if (pickupStore != "") {
            pickUpInformation += "\n" + "Store: " + pickupStore
        };

        if (name.val() != "") {
            pickUpInformation += "\n" + "Name of person collecting: " + name.val();
        };

        if (pickupDate.val() != "") {
            pickUpInformation += "\n" + "Pickup Date: " + pickupDate.val();
        };

        if (phoneNumber.val() != "") {
            pickUpInformation += "\n" + "Phone: " + phone.val();
        };

        if (notesText != "") {
            $j('textarea[name="note"]').val(notesText + "\n" + pickUpInformation); // Add current notes + info
        } else {
            $j('textarea[name="note"]').val(pickUpInformation); // Just add info
        };
    };

    var updateCartNotes = function(orderNotes, callback) {
        var params = {
            type: 'POST',
            url: '/cart/update.js',
            data: 'note=' + orderNotes,
            dataType: 'json',
            success: function() {
                console.log('Updated cart');
                callback;
            },
            error: function(XMLHttpRequest, textStatus) {
                console.log(XMLHttpRequest, textStatus);
            }
        };
        $j.ajax(params);
    };

    $j("#storeUL").on("click", ".searchTerm", function(e) {
        // Make class active
        // If already selected, unselect
        if ($j(this).attr('class').includes('activeStore')) {
            $j(this).removeClass('activeStore');
            pickupStore = "";
            $j('#pickup-store').val(pickupStore);

        } else {
            pickupStore = ($j(this).children("a")[0].innerHTML);
            $j("#storeUL li").removeClass('activeStore'); // Clear class from all li
            $j(this).addClass('activeStore');
            $j('#pickup-store').val(pickupStore);

        };

        e.preventDefault();
    });



    // If multiple stores in settings, show store search
    if (stores.length > 1) {
        // Show store-search
        var store = [];
        var ul = document.getElementById("storeUL");
        $j('.pickup-store-search').prop('required', true);
        for (var n in stores) {
            $j(ul).append('<li id= ' + stores[n].id + ' class="searchTerm"><a href="#">' + stores[n].name + '</a></li>');
        }
    } else {
        var search = document.getElementById('store-search');
        $j(search).toggle();
    };


    // If pickup product already in the cart, make pickup checkbox checked
    var inCart = false; // Assume not currently in cart
    getCartItems(function(response) {

        // Check each item in cart to see if currently in the cart
        for (var item in response.items) {
            if (response.items[item].variant_id == pickupProductID) {
                inCart = true;
            };
        };

        $j('.product-collection').each(function(c) {
            if (collections.includes($j(this).text())) {
                // Make mandatory
                $j('#pickup-box').addClass('pickup-hidden');
                $j('#pickup-header').text('An item in your cart must be collected');
                $j('#pickup-details').css('display', 'inline !important');
                inCart = true;
                // Make mandatory.
                $j('#pickup-box').prop('checked', true);
                // pickupBoxChange();
                if (!$.validator) {
                  setTimeout(function(){
                    pickupBoxChange();
                  }, 200);
                } else {
                  pickupBoxChange();
                }

            };
        });
    });

    var notes = $j('textarea[name="note"]'); // Cart Notes

    // If user goes back from checkout, clean pickup information from notes.
        if (notes != undefined && notes.val() != undefined && notes.val().includes("Pickup Information")) {
        //if (notes.val().includes("Pickup Information")) {
            var existingNotes = notes.val();
            var cleanNotes = existingNotes.substring(0, existingNotes.indexOf('Pickup Information:'));
            notes.val(cleanNotes);
        };


    $j(document).ready(function() {
          var pickupInstalled = false;
          var togglePickupContainer = function() {
            if (pickupInstalled === false) {
              $j('#pickup-container').css("display", "none");
            } else {
              $j('#pickup-container').css("display", "block");
            }
          };

          // Make sure app is still installed
          $j.ajax({
              type: "GET",
              url: "https://shopify-pickup-app.herokuapp.com/isInstalled",
              data: {shop:"brewdog.myshopify.com"},
              // async: false,
              success: function(res) {
                if (res.error) {
                  pickupInstalled = false;
                  togglePickupContainer();
                } else {
                  pickupInstalled = true;
                  togglePickupContainer();
                }
              },
              error: function(err) {
                console.log(err);
                  if ('brewdog.myshopify.com' != 'silver-nutmeg.myshopify.com') {
                      pickupInstalled = false;
                      togglePickupContainer();
                  }
              },
              dataType: "json"
          });

        // Gets the cart form (and previously appended prefilled checkout info)
        for (var n in $j('form')) {
            var testForm = $j('form')[n]; // Create $j to test the form attributes
            if ($j(testForm).attr('action') == '/cart') { // We have a winner
                var myForm = $j(testForm);
                break
            };
        };

        var numDaysBetween = function(d1, d2) {
            // Return number of days between two dates
            var diff = Math.abs(d1.getTime() - d2.getTime());
            return diff / (1000 * 60 * 60 * 24);
        };

        function showDateError(errorMsg) {
            // Manually shows error message on date field
            $j('#pickup-date-start-error').css('display', 'block'); // Show error message
            $j('#pickup-date-start-error').text(errorMsg);
            $j('#pickup-date-start').addClass('error').removeClass('valid');
            $j('#pickup-date-start').attr('aria-invalid', "true");
        };

        function clearDateErrors() {
            $j('#pickup-date-start-error').css('display', 'none'); // Show error message
            $j('#pickup-date-start').addClass('valid').removeClass('error');
            $j('#pickup-date-start').attr('aria-invalid', "false");
        };


        var submitForm = myForm[0];

        $j('input[name="checkout"]').on('click', function(){
          $j(submitForm).attr('action', '/checkout');
        });

        $j('button[name="checkout"]').on('click', function(){
          $j(submitForm).attr('action', '/checkout');
        });

        $j(function() {
            $j(submitForm).validate({
                ignore: [],
                rules: {},
                messages: {},
                submitHandler: function(form) {
                    if (document.getElementById('pickup-box').checked) {
                      if (settings.date_enabled) {
                        // Make sure date is valid
                        var chosenDate = new Date($j('#pickup-date-start').val());
                        var todayDate = new Date();

                        if (chosenDate.getTime() < todayDate.getTime()) {
                          // Check to see if they have enabled same day pickup (value will be between 0 and -1)
                          if (settings.min_days == 0 && numDaysBetween(chosenDate, todayDate) < 1) {
                            // If so, submit form as usual
                            clearDateErrors();
                            addCartItems(pickupProductID, function() {
                                setOrderNotes();
                                form.submit();
                            });
                          } else {
                            showDateError("Pickup date must be in the future.");
                          };
                        } else if (settings.max_days != 0 && Math.ceil(numDaysBetween(chosenDate, todayDate)) > settings.max_days) {
                          showDateError("Pickup date must be within " + settings.max_days + " days.");
                        } else if (Math.round(numDaysBetween(chosenDate, todayDate)) < settings.min_days) {
                          showDateError("Pickup date must be at least " + settings.min_days + " days away.");
                        } else {
                          // Date is fine. Submit form
                          clearDateErrors();
                          addCartItems(pickupProductID, function() {
                              setOrderNotes();
                              form.submit();
                          });
                        };
                      } else {
                        // Date not enabled, just submit form
                          clearDateErrors();
                          addCartItems(pickupProductID, function() {
                              setOrderNotes();
                              form.submit();
                          });
                      };
                  } else {
                    // Pickup box not selected. Submit form
                    form.submit();
                  };
              }

            });

            // Remove validate rules and submit as normal if the update button was pressed.
            $j('input[name="update"]').on('click', function(){
              $j(submitForm).attr('action', '/cart');
              $j("#pickup-date-start").rules('remove');
              $j("#pickup-number").rules('remove');
              $j('#pickup-name').rules('remove');
              $j('#pickup-store').rules('remove');
              submitForm.submit();
            });

            // Some stores use a button instead of an input
            $j('button[name="update"]').on('click', function(){
              $j(submitForm).attr('action', '/cart');
              $j("#pickup-date-start").rules('remove');
              $j("#pickup-number").rules('remove');
              $j('#pickup-name').rules('remove');
              $j('#pickup-store').rules('remove');
              submitForm.submit();
            });
        });
        // If user has gone form shipping stage back to cart, the pickup product will be in the cart and checkbox will be checked.
        // If they uncheck the product (meaning they don't want store pickup. Remove the product from the cart.

        if (inCart == true) {
            // Make mandatory.
            $j('#pickup-box').prop('checked', true);
            // pickupBoxChange();
            if (!$.validator) {
              setTimeout(function(){
                pickupBoxChange();
              }, 200);
            } else {
              pickupBoxChange();
            }
        } else {
            $j('#pickup-box').prop('checked', false);
        };

        // Double check to make sure notes are cleaned in case page loaded too slow
        var notes = $j('textarea[name="note"]'); // Cart Notes

        // If user goes back from checkout, clean pickup information from notes.
        if (notes.val().includes("Pickup Information")) {
            var existingNotes = notes.val();
            var cleanNotes = existingNotes.substring(0, existingNotes.indexOf('Pickup Information:'));
            notes.val(cleanNotes);
        };

    });
</script>
